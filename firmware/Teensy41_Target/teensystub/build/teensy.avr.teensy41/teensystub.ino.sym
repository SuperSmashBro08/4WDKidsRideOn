
C:\Users\johnw\AppData\Local\arduino\sketches\7A41F3B4C03617EFA892FC94CDC79164/teensystub.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001e84 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0000a190 l    d  .fini	00000000 .fini
0000a194 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20001ac0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6000dbe8 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 analog.c
2000210f l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
200020cc l     O .bss	00000004 s_hotCount
200020d0 l     O .bss	00000004 s_hotTemp
200020d4 l     O .bss	00000004 s_hot_ROOM
200020d8 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00002360 l     F .text.itcm	00000088 schedule_transfer
000023e8 l     F .text.itcm	00000036 run_callbacks
00002420 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
20002058 l     O .bss	00000008 endpoint0_buffer
20002060 l     O .bss	00000004 endpoint0_notify_mask
20001c80 l     O .bss	00000008 endpoint0_setupdata
20002064 l     O .bss	00000004 endpointN_notify_mask
20002094 l     O .bss	00000008 reply_buffer
20002113 l     O .bss	00000001 sof_usage
2000211a l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
2000207c l     O .bss	00000000 object.0
60001e80 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 usb_desc.c
20001614 l     O .data	00000012 device_descriptor
20001628 l     O .data	00000028 microsoft_os_compatible_id_desc
20001650 l     O .data	00000012 microsoft_os_string_desc
60001f80 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 teensystub.ino.cpp
00000068 l     F .text.itcm	00000012 Print::println(String const&) [clone .isra.0]
20001c88 l     O .bss	00000004 guard variable for loop::line
20002106 l     O .bss	00000001 echo_enabled
20002107 l     O .bss	00000001 in_hex_session
20001cf4 l     O .bss	00000004 last_stream_ms
20002108 l     O .bss	00000001 stream_enabled
20002109 l     O .bss	00000001 ota_suspend_armed
2000210a l     O .bss	00000001 echo_resume_after_hex
2000210b l     O .bss	00000001 stream_resume_after_hex
20001cf8 l     O .bss	00000004 hex_ok
20001cfc l     O .bss	00000004 hex_bad
20001d00 l     O .bss	00000004 hex_bytes
20001d04 l     O .bss	00000004 hex_lines
20001d38 l     O .bss	0000000c loop::line
20001d44 l     O .bss	00000004 loop::t_led
20001078 l     O .data	00000004 blink_ms
20000370 l     O .data	00000014 FW_VERSION
20000384 l     O .data	00000021 OTA_TOKEN
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 HardwareSerial2.cpp
20001c8c l     O .bss	00000040 rx_buffer2
20001ccc l     O .bss	00000028 tx_buffer2
20001018 l     O .data	00000060 UART4_Hardware
00000000 l    df *ABS*	00000000 Print.cpp
000014cc l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
00002ccc l     F .text.itcm	00000060 rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
00002d2c l     F .text.itcm	000000b4 rx_event
00002de0 l     F .text.itcm	00000090 usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
00002e70 l     F .text.itcm	000001b8 usb_serial_write.part.0
2000209c l     O .bss	00000004 rx_available
200020a0 l     O .bss	00000010 rx_count
20002111 l     O .bss	00000001 rx_head
200020b0 l     O .bss	00000010 rx_index
200020c0 l     O .bss	00000009 rx_list
20002100 l     O .bss	00000002 rx_packet_size
20002112 l     O .bss	00000001 rx_tail
20001b00 l     O .bss	00000100 rx_transfer
20002114 l     O .bss	00000001 transmit_previous_timeout
20002102 l     O .bss	00000002 tx_available
20002115 l     O .bss	00000001 tx_head
20002116 l     O .bss	00000001 tx_noautoflush
20002104 l     O .bss	00000002 tx_packet_size
20001c00 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
2000210e l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-isspace.o
00000000 l    df *ABS*	00000000 libc_a-toupper.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00004308 l     F .text.itcm	00000018 stdio_exit_handler
00004320 l     F .text.itcm	00000040 cleanup_stdio
00004360 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-snprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00007980 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00008920 l     F .text.itcm	00000076 __sprint_r.part.0
00009924 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
60001e40 l     F .text.code	00000008 __main_veneer
60001e48 l     F .text.code	00000008 __memset_veneer
60001e50 l     F .text.code	00000008 __set_arm_clock_veneer
60001e58 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001e60 l     F .text.code	00000008 __sm_set_pool_veneer
60001e68 l     F .text.code	00000008 __pwm_init_veneer
60001e70 l     F .text.code	00000008 __delay_veneer
60001e78 l     F .text.code	00000008 ____libc_init_array_veneer
0000a180 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
0000a188 l     F .text.itcm	00000008 ___init_veneer
00003250 g     F .text.itcm	00000018 usb_serial_available
0000a158 g     F .text.itcm	00000024 _isatty_r
00004d5c g     F .text.itcm	000000ba strcpy
600016d0 g     F .text.code	00000002 startup_default_late_hook
0000496c g     F .text.itcm	0000002c _lseek_r
00003420  w    F .text.itcm	000000d8 yield
200020fc g     O .bss	00000004 usb_timer1_callback
60001e9c g     O .text.progmem	00000018 usb_string_manufacturer_name_default
600017e8 g     F .text.code	00000384 configure_external_ram
20001edc g     O .bss	00000001 __lock___atexit_recursive_mutex
00008794 g     F .text.itcm	0000004c _wcrtomb_r
00001600 g     F .text.itcm	0000001c Print::println()
000045bc g     F .text.itcm	00000020 __sseek
00004434 g     F .text.itcm	0000003c __sinit
0000a07c g     F .text.itcm	000000b0 __swbuf_r
00001a8c g     F .text.itcm	00000056 String::substring(unsigned int) const
00003edc g     F .text.itcm	0000000c __malloc_unlock
2000210d g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
60001674 g     F .text.code	00000054 analog_init
000045e4 g     F .text.itcm	0000004a _vdprintf_r
00001b04 g     F .text.itcm	00000058 String::trim()
20000fa4 g     O .data	00000004 F_CPU_ACTUAL
000046b0 g     F .text.itcm	000000f8 memmove
000044d0 g     F .text.itcm	00000088 snprintf
0000527c g     F .text.itcm	0000004c _Balloc
0000a19c g       .ARM.exidx	00000000 __exidx_end
2000210c g     O .bss	00000001 EventResponder::runningFromYield
00002300 g     F .text.itcm	00000060 tempmonGetTemp
0000154c g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
2000107c g     O .data	00000004 __atexit_recursive_mutex
00004a14 g     F .text.itcm	0000000c __errno
0000136c g     F .text.itcm	0000014a HardwareSerialIMXRT::IRQHandler()
60001000 g     O .text.headers	00000020 ImageVectorTable
20001d10 g     O .bss	00000004 EventResponder::firstInterrupt
00002c50 g     F .text.itcm	00000004 usb_transfer_status
000014b8 g     F .text.itcm	0000000c IRQHandler_Serial2
000038c0 g     F .text.itcm	00000084 sm_set_pool
20001d18 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
20002054 g     O .bss	00000004 __stdio_exit_handler
00001820 g     F .text.itcm	00000038 String::String(String const&)
00002cc4  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
0000a12c g     F .text.itcm	0000002c _fstat_r
20000688 g     O .data	00000370 digital_pin_to_info_PGM
20002068 g     O .bss	00000004 errno
0000a198 g       .text.itcm	00000000 _etext
20001ac0 g       .bss	00000000 _sbss
00001d68 g     F .text.itcm	00000024 digitalRead
60001f8c g       *ABS*	00000000 _stextload
00000154 g     F .text.itcm	00000c7c loop
00001fa4 g     F .text.itcm	0000007a flexpwm_init
600016d4 g     F .text.code	00000004 startup_debug_reset
00002b14 g     F .text.itcm	00000064 usb_config_rx
20001d0c g     O .bss	00000004 EventResponder::lastInterrupt
00001e0c g     F .text.itcm	00000134 memcpy
20001ac0 g     O .data	00000000 .hidden __TMC_END__
00005a10 g     F .text.itcm	00001b44 _svfprintf_r
200020e4 g     O .bss	00000004 systick_millis_count
0000128c g     F .text.itcm	000000dc HardwareSerialIMXRT::write9bit(unsigned long)
00000fb0 g     F .text.itcm	0000029c HardwareSerialIMXRT::begin(unsigned long, unsigned short)
20002118 g     O .bss	00000001 usb_configuration
00003874 g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
60001e9c  w    O .text.progmem	00000018 usb_string_manufacturer_name
00003950 g     F .text.itcm	00000010 malloc
000022e0  w    F .text.itcm	0000000a _fstat
000078c8 g     F .text.itcm	00000040 __assert_func
200002a8 g     O .data	000000c8 __mprec_tens
60001cf8 g     F .text.code	000000e8 usb_init
20001f18 g     O .bss	00000004 __malloc_top_pad
200020e8 g     O .bss	00000004 systick_safe_read
00001a40 g     F .text.itcm	00000012 String::charAt(unsigned int) const
aaaaaaaf g       *ABS*	00000000 _flexram_bank_config
20001084 g     O .data	00000000 .hidden __dso_handle
000077a0 g     F .text.itcm	00000008 _localeconv_r
000099a4 g     F .text.itcm	000002f4 __sfvwrite_r
00005420 g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
60001f1c g     O .text.progmem	00000062 usb_config_descriptor_480
000049c4 g     F .text.itcm	00000024 _sbrk_r
600016c8 g     F .text.code	00000002 startup_default_early_hook
6000164c g     F .text.code	00000028 ResetHandler
000032d8 g     F .text.itcm	00000020 usb_serial_getchar
200020ec g     O .bss	00000008 usb_cdc_line_coding
00001d14 g     F .text.itcm	00000054 digitalWrite
20001d14 g     O .bss	00000004 EventResponder::lastYield
00004998 g     F .text.itcm	0000002c _read_r
000042e4 g     F .text.itcm	00000010 isspace
00007554 g     F .text.itcm	000000c6 _fclose_r
2000206c g     O .bss	00000010 extmem_smalloc_pool
20001f10 g     O .bss	00000004 __malloc_max_sbrked_mem
00001d8c g     F .text.itcm	00000070 pinMode
00001a54 g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
00001680 g     F .text.itcm	00000164 Print::printFloat(double, unsigned char)
00000df4 g     F .text.itcm	00000026 HardwareSerialIMXRT::available()
6000dc00 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
0000a194 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
000022ec  w    F .text.itcm	00000004 _isatty
20001d08 g     O .bss	00000004 EventResponder::firstYield
00000dd0  w    F .text.itcm	00000004 HardwareSerialIMXRT::operator bool()
00003f00 g     F .text.itcm	000003d8 _realloc_r
00004a20 g     F .text.itcm	00000048 __libc_init_array
200003dc g     O .data	00000030 vtable for HardwareSerialIMXRT
00001a18 g     F .text.itcm	00000026 String::startsWith(String const&) const
00009e10 g     F .text.itcm	00000066 _fputwc_r
20000280 g     O .data	00000028 __mprec_bigtens
000022f8  w    F .text.itcm	00000004 abort
00002cac  w    F .text.itcm	00000004 usb_serial_class::clear()
000022a0  w    F .text.itcm	00000034 _sbrk
6000c128 g       *ABS*	00000000 _sdataload
00005788 g     F .text.itcm	00000042 __mcmp
20001080 g     O .data	00000004 __brkval
20002117 g     O .bss	00000001 usb_cdc_line_rtsdtr
60001e34 g     F .text.code	00000000 _init
00003028 g     F .text.itcm	00000002 usb_serial_reset
00001858 g     F .text.itcm	0000000e String::~String()
00001820 g     F .text.itcm	00000038 String::String(String const&)
000019c0 g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
60001eb8 g     O .text.progmem	00000062 usb_config_descriptor_12
20002140 g       .bss	00000000 _ebss
00001920 g     F .text.itcm	0000007e String::append(char const*, unsigned int)
00005380 g     F .text.itcm	00000040 __hi0bits
20203080 g       .bss.dma	00000000 _heap_start
20001ee0 g     O .bss	00000001 __lock___malloc_recursive_mutex
00001868 g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
20001f1c g     O .bss	00000138 __sf
00000002 g       *ABS*	00000000 _itcm_block_count
20001ae0 g     O .bss	00000020 endpoint0_transfer_data
00002020 g     F .text.itcm	000000f4 pwm_init
00001858 g     F .text.itcm	0000000e String::~String()
6000e800 g       .text.csf	00000000 __text_csf_end
60001b6c g     F .text.code	0000005c usb_pll_start
000055d8 g     F .text.itcm	000000c0 __pow5mult
20001ac0 g     O .bss	00000020 endpoint0_transfer_ack
200020f4 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
00002c0c g     F .text.itcm	00000028 usb_transmit
00003540 g     F .text.itcm	00000020 systick_isr
00004a74 g     F .text.itcm	00000002 __retarget_lock_release_recursive
000018d0 g     F .text.itcm	0000002c String::String(unsigned long, unsigned char)
20000fa8 g     O .data	00000010 Serial
000014c4  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
600016c8  w    F .text.code	00000002 startup_early_hook
0000320c g     F .text.itcm	00000044 usb_serial_peekchar
00004470 g     F .text.itcm	0000000c __sfp_lock_acquire
000077b0 g     F .text.itcm	00000000 memchr
00003560 g     F .text.itcm	000002f0 set_arm_clock
200020e0 g     O .bss	00000004 systick_cycle_count
20001664 g     O .data	00000016 usb_string_serial_number_default
00005044 g     F .text.itcm	0000020c _free_r
0000493c g     F .text.itcm	0000000c __locale_mb_cur_max
000087e0 g     F .text.itcm	00000016 _wcsrtombs_r
00000f48 g     F .text.itcm	00000068 HardwareSerialIMXRT::end()
00001368 g     F .text.itcm	00000004 HardwareSerialIMXRT::write(unsigned char)
20001d4c g     O .bss	00000190 __atexit0
00002cbc  w    F .text.itcm	00000004 usb_serial_class::flush()
200015fc g     O .data	00000004 __malloc_sbrk_base
00002cb4  w    F .text.itcm	00000004 usb_serial_class::read()
000022f0  w    F .text.itcm	00000006 _lseek
00005698 g     F .text.itcm	000000f0 __lshift
00002bdc g     F .text.itcm	00000030 usb_prepare_transfer
00000e1c g     F .text.itcm	0000007a HardwareSerialIMXRT::peek()
00002114 g     F .text.itcm	0000018c unused_interrupt_vector
00008820 g     F .text.itcm	00000100 __ssprint_r
200020f8 g     O .bss	00000004 usb_timer0_callback
60001bc8 g     F .text.code	00000130 tempmon_init
0000464c g     F .text.itcm	00000062 _vasnprintf_r
00004f1c g     F .text.itcm	00000088 __register_exitproc
0000484c g     F .text.itcm	0000008a strncmp
000019d0 g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
00003268 g     F .text.itcm	00000070 usb_serial_flush_input
0000547c g     F .text.itcm	0000015c __multiply
000032f8 g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
000048d8 g     F .text.itcm	00000064 strncpy
00000e98 g     F .text.itcm	00000092 HardwareSerialIMXRT::read()
20001ee8 g     O .bss	00000028 __malloc_current_mallinfo
00005920 g     F .text.itcm	000000d4 __d2b
00001c0c g     F .text.itcm	00000060 analogReadRes
60001de0 g     F .text.code	00000054 _reboot_Teensyduino_
600016cc g     F .text.code	00000002 startup_default_middle_hook
00003ee8 g     F .text.itcm	00000018 realloc
000024e4 g     F .text.itcm	00000630 usb_isr
000042d8 g     F .text.itcm	0000000c __cxa_atexit
00004948 g     F .text.itcm	00000024 _close_r
200003b4  w    O .data	00000028 vtable for usb_serial_class
000017e4 g     F .text.itcm	0000003a String::String(char const*)
00004a6c g     F .text.itcm	00000002 __retarget_lock_close_recursive
200020dc g     O .bss	00000004 scale_cpu_cycles_to_microseconds
00009c98 g     F .text.itcm	000000cc __swsetup_r
200011f4 g     O .data	00000408 __malloc_av_
20001d48 g     O .bss	00000004 __atexit
00004558 g     F .text.itcm	00000022 __sread
0000338c g     F .text.itcm	00000094 usb_serial_flush_output
00003ed0 g     F .text.itcm	0000000c __malloc_lock
00000f2c g     F .text.itcm	0000001a HardwareSerialIMXRT::flush()
20001800 g     O .data	000002c0 _VectorsRam
0000774c g     F .text.itcm	00000054 _fflush_r
00007908 g     F .text.itcm	00000078 _calloc_r
000019ec g     F .text.itcm	0000002c String::equals(char const*) const
2000211b g     O .bss	00000001 yield_active_check_flags
00004a70 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20002119 g     O .bss	00000001 usb_high_speed
000047a8 g     F .text.itcm	000000a4 memset
00001dfc g     F .text.itcm	00000010 main
20001f14 g     O .bss	00000004 __malloc_max_total_mem
00004a68 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
000045dc g     F .text.itcm	00000008 __sclose
00002c54 g     F .text.itcm	00000058 usb_init_serialnumber
60001e84 g       .text.code	00000000 __init_array_end
00007aa8 g     F .text.itcm	00000cec _dtoa_r
00003970 g     F .text.itcm	00000560 _malloc_r
000059f4 g     F .text.itcm	0000001a __ascii_wctomb
00004fa4 g     F .text.itcm	000000a0 _malloc_trim_r
00009e78 g     F .text.itcm	00000106 _wcsnrtombs_l
60001eb4 g     O .text.progmem	00000004 string0
00003324 g     F .text.itcm	00000018 usb_serial_write
600016d0  w    F .text.code	00000002 startup_late_hook
00002cb8  w    F .text.itcm	00000004 usb_serial_class::available()
00004a88 g     F .text.itcm	000002dc strcmp
20000000 g     O .data	00000280 endpoint_queue_head
60001e84  w    O .text.progmem	00000016 usb_string_product_name
00001c6c g     F .text.itcm	000000a8 delay
0000a190 g     F .fini	00000000 _fini
000018fc g     F .text.itcm	00000022 String::operator=(char const*)
60001020 g     O .text.headers	0000000c BootData
00001638 g     F .text.itcm	0000001c Print::printf(char const*, ...)
000015e8 g     F .text.itcm	00000016 Print::print(long)
000022fc g     F .text.itcm	00000004 Panic_Temp_isr
00009f80 g     F .text.itcm	00000024 _wcsnrtombs_r
000049e8 g     F .text.itcm	0000002c _write_r
000017e4 g     F .text.itcm	0000003a String::String(char const*)
20001610 g     O .data	00000004 _impure_ptr
0000761c g     F .text.itcm	00000130 __sflush_r
00004488 g     F .text.itcm	00000046 _fwalk_sglue
60001e80 g       .text.code	00000000 __preinit_array_end
00005250 g     F .text.itcm	0000002a __ascii_mbtowc
000024b8 g     F .text.itcm	0000002c usb_stop_sof_interrupts
0000007c g     F .text.itcm	000000d8 setup
20000ddc g     O .data	00000084 usb_descriptor_list
20070000 g       .text.csf	00000000 _estack
0000333c g     F .text.itcm	00000050 usb_serial_write_buffer_free
20001604 g     O .data	0000000c __sglue
0000302c g     F .text.itcm	00000100 usb_serial_configure
0000161c  w    F .text.itcm	0000001c _write
20001ac0 g       .data	00000000 _edata
20002110 g     O .bss	00000001 external_psram_size
00009d64 g     F .text.itcm	000000aa __fputwc
00002cc0  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
0000124c g     F .text.itcm	00000040 nvic_execution_priority()
00001f40 g     F .text.itcm	00000062 ultoa
0000457c g     F .text.itcm	0000003e __swrite
000034f8 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20001600 g     O .data	00000004 __malloc_trim_threshold
00002cb0  w    F .text.itcm	00000004 usb_serial_class::peek()
000087f8 g     F .text.itcm	00000028 fiprintf
00008998 g     F .text.itcm	00000f8c _vfiprintf_r
000057cc g     F .text.itcm	00000154 __mdiff
20000e80 g     O .data	00000120 _impure_data
0000447c g     F .text.itcm	0000000c __sfp_lock_release
000018d0 g     F .text.itcm	0000002c String::String(unsigned long, unsigned char)
200004bc g     O .data	00000101 _ctype_
000022d4  w    F .text.itcm	00000004 _read
60001e80 g       .text.code	00000000 __init_array_start
00001b5c g     F .text.itcm	000000b0 analogRead
20000fa0 g     O .data	00000004 F_BUS_ACTUAL
20000cc4 g     O .data	0000002a pin_to_channel
00009fa4 g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
00004e40 g     F .text.itcm	000000dc strlen
000042f4 g     F .text.itcm	00000014 toupper
60001e84 g     O .text.progmem	00000016 usb_string_product_name_default
00004630 g     F .text.itcm	0000001c vdprintf
00000dd4 g     F .text.itcm	00000020 HardwareSerialIMXRT::availableForWrite()
600016cc  w    F .text.code	00000002 startup_middle_hook
0000159c g     F .text.itcm	0000004c Print::print(String const&)
600016d8 g     F .text.code	00000110 configure_cache
00001ae4 g     F .text.itcm	0000001e String::toUpperCase()
60001e80 g       .text.code	00000000 __preinit_array_start
00002c34 g     F .text.itcm	0000001c usb_receive
000019a0 g     F .text.itcm	0000001e String::append(char)
000053c0 g     F .text.itcm	00000060 __lo0bits
0000e800 g       *ABS*	00000000 _flashimagelen
00003944 g     F .text.itcm	0000000a __aeabi_atexit
00003850 g     F .text.itcm	00000024 rtc_get
00007850 g     F .text.itcm	00000078 frexp
70000000 g       .bss.extram	00000000 _extram_start
0000353c g     F .text.itcm	00000004 pendablesrvreq_isr
20001088 g     O .data	0000016c __global_locale
0000312c g     F .text.itcm	000000e0 usb_serial_read
20001ee4 g     O .bss	00000001 __lock___sfp_recursive_mutex
00001654 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
00002b78 g     F .text.itcm	00000064 usb_config_tx
000022d8  w    F .text.itcm	00000006 _close
00003960 g     F .text.itcm	00000010 free
000052dc g     F .text.itcm	000000a4 __multadd
000052c8 g     F .text.itcm	00000012 _Bfree
20000fb8 g     O .data	00000060 Serial2
20001664  w    O .data	00000016 usb_string_serial_number


